{"version":3,"sources":["Components/FormModal/FormModal.js","Containers/HistoryTable/HistoryTable.js","Containers/App/App.js","index.js"],"names":["FormModal","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleAgeChange","e","setState","age","target","value","handleSexChange","sex","handleChestPainChange","chestPain","handleRestingBloodPressureChange","restingBloodPressure","handleSerumCholesterolChange","serumCholesterol","handleFastingBloodSugarChange","fastingBloodSugar","handleRestingEcgChange","restingEcg","handleMaxHeartRateChange","maxHeartRate","handleExerciseInducesAnginaChange","exerciseInducesAngina","handleStDepressionChange","stDepression","handlePeakExerciseStChange","peakExerciseSt","handleMajorVesselsNumChange","majorVesselsNum","handleThalChange","thal","onSubmit","props","handleSubmit","state","console","log","react_default","a","createElement","reactstrap_es","isOpen","toggle","for","type","name","id","onChange","disabled","hidden","addonType","color","onClick","Component","HistoryTable","renderHead","handleAddNewClick","isModalOpen","handleCloseModal","getDiagnosa","renderRows","data","length","colSpan","className","rows","i","push","renderRow","key","renderSex","renderChestPain","renderFastingBloodSugar","renderRestingEcg","renderExercisesInducesAngina","renderPeakExerciseSt","renderThal","renderDiagnosa","diagnosis","code","options","method","Number","chest_pain_type","rest_blood_pressure","serum_cholestrol","high_fasting_blood_sugar","resting_ecg","max_heart_rate","exercise_induced_angina","st_depression","peak_exercise_st","major_vessels_num","url","thiz","assertThisInitialized","axios","then","response","heart_disease_type","newData","objectSpread","toConsumableArray","concat","diagnosa","hover","Components_FormModal_FormModal","App","Switch","Route","path","component","ReactDOM","render","BrowserRouter","Containers_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.2c5d2923.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Row, Col, Button, Form, FormGroup, Label, Input, InputGroup, InputGroupAddon } from 'reactstrap';\n// import './Home.css';\n\nclass FormModal extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            age: \"\",\n            sex: \"\",\n            chestPain: \"\",\n            restingBloodPressure: \"\",\n            serumCholesterol: \"\",\n            fastingBloodSugar: \"\",\n            restingEcg: \"\",\n            maxHeartRate: \"\",\n            exerciseInducesAngina: \"\",\n            stDepression: \"\",\n            peakExerciseSt: \"\",\n            majorVesselsNum: \"\",\n            thal: \"\",\n        }\n    }\n\n    handleAgeChange = (e) => {\n        this.setState({ age: e.target.value });\n    }\n\n    handleSexChange = (e) => {\n        this.setState({ sex: e.target.value });\n    }\n\n    handleChestPainChange = (e) => {\n        this.setState({ chestPain: e.target.value });\n    }\n\n    handleRestingBloodPressureChange = (e) => {\n        this.setState({ restingBloodPressure: e.target.value });\n    }\n\n    handleSerumCholesterolChange = (e) => {\n        this.setState({ serumCholesterol: e.target.value });\n    }\n\n    handleFastingBloodSugarChange = (e) => {\n        this.setState({ fastingBloodSugar: e.target.value });\n    }\n\n    handleRestingEcgChange = (e) => {\n        this.setState({ restingEcg: e.target.value });\n    }\n\n    handleMaxHeartRateChange = (e) => {\n        this.setState({ maxHeartRate: e.target.value });\n    }\n\n    handleExerciseInducesAnginaChange = (e) => {\n        this.setState({ exerciseInducesAngina: e.target.value });\n    }\n\n    handleStDepressionChange = (e) => {\n        this.setState({ stDepression: e.target.value });\n    }\n\n    handlePeakExerciseStChange = (e) => {\n        this.setState({ peakExerciseSt: e.target.value });\n    }\n\n    handleMajorVesselsNumChange = (e) => {\n        this.setState({ majorVesselsNum: e.target.value });\n    }\n\n    handleThalChange = (e) => {\n        this.setState({ thal: e.target.value });\n    }\n     \n    onSubmit = () => {\n        this.props.handleSubmit(this.state);\n    }\n\n    render() {\n        console.log(this.state)\n        return (\n            <Modal isOpen={this.props.isOpen} toggle={this.props.toggle}>\n                <ModalHeader toggle={this.props.toggle}>Title</ModalHeader>\n                <ModalBody>\n                    <Form>\n                        <Row>\n                            <Col>\n                                <FormGroup>\n                                    <Label for=\"age\">Age</Label>\n                                    <Input \n                                        type=\"number\"\n                                        name=\"age\"\n                                        id=\"age\"\n                                        value={this.state.age}\n                                        onChange={this.handleAgeChange}\n                                    />\n                                </FormGroup>\n                            </Col>\n                            \n                            <Col>\n                                <FormGroup>\n                                    <Label for=\"sex\">Sex</Label>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"sex\"\n                                        id=\"sex\"\n                                        value={this.state.sex}\n                                        onChange={this.handleSexChange}\n                                    >\n                                        <option value=\"\" disabled hidden>Choose here</option>\n                                        <option value={1}>Male</option>\n                                        <option value={0}>Female</option>\n                                    </Input>\n                                </FormGroup>\n                            </Col>\n                        </Row>\n\n                        <FormGroup>\n                            <Label for=\"chestPain\">Chest-Pain Type</Label>\n                            <Input \n                                type=\"select\" \n                                name=\"chestPain\" \n                                id=\"chestPain\"\n                                value={this.state.chestPain}\n                                onChange={this.handleChestPainChange}\n                            >\n                                <option value=\"\" disabled hidden>Choose here</option>\n                                <option value={1}>Typical Angina</option>\n                                <option value={2}>Atypical Angina</option>\n                                <option value={3}>Non-Anginal Pain</option>\n                                <option value={4}>Asymptotic</option>\n                            </Input>\n                        </FormGroup>\n\n                        <Row>\n                            <Col>\n                                <FormGroup>\n                                    <Label for=\"restingBloodPressure\">Resting Blood Pressure</Label>\n                                    <InputGroup>\n                                        <Input\n                                            type=\"number\" \n                                            name=\"restingBloodPressure\" \n                                            id=\"restingBloodPressure\"\n                                            value={this.state.restingBloodPressure}\n                                            onChange={this.handleRestingBloodPressureChange}\n                                        />\n                                        <InputGroupAddon addonType=\"append\">mmHg</InputGroupAddon>\n                                    </InputGroup>\n                                </FormGroup>\n                            </Col>\n\n                            <Col>\n                                <FormGroup>\n                                    <Label for=\"serumCholesterol\">Serum<br/>Cholesterol</Label>\n                                    <InputGroup>\n                                        <Input \n                                            type=\"number\" \n                                            name=\"serumCholesterol\" \n                                            id=\"serumCholesterol\"\n                                            value={this.state.serumCholesterol}\n                                            onChange={this.handleSerumCholesterolChange}\n                                        />\n                                        <InputGroupAddon addonType=\"append\">mg/dl</InputGroupAddon>\n                                    </InputGroup>\n                                </FormGroup>\n                            </Col>\n\n                            <Col>\n                                <FormGroup>\n                                    <Label for=\"fastingBloodSugar\">Fasting Blood Sugar > 120 mg/dl</Label>\n                                    <Input\n                                        type=\"select\" \n                                        name=\"fastingBloodSugar\"\n                                        id=\"fastingBloodSugar\"\n                                        value={this.state.fastingBloodSugar}\n                                        onChange={this.handleFastingBloodSugarChange}\n                                    >\n                                        <option value=\"\" disabled hidden>Choose here</option>\n                                        <option value={1}>True</option>\n                                        <option value={0}>False</option>\n                                    </Input>\n                                </FormGroup>\n                            </Col>\n                        </Row>\n\n                        <FormGroup>\n                            <Label for=\"restingEcg\">Resting ECG</Label>\n                            <Input\n                                type=\"select\" \n                                name=\"restingEcg\"\n                                id=\"restingEcg\"\n                                value={this.state.restingEcg}\n                                onChange={this.handleRestingEcgChange}\n                            >\n                                <option value=\"\" disabled hidden>Choose here</option>\n                                <option value={0}>Normal</option>\n                                <option value={1}>Having ST-T Wave Abnormality</option>\n                                <option value={2}>Left Ventricular Hyperthrophy</option>\n                            </Input>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label for=\"maxHeartRate\">Max Heart Rate Achived</Label>\n                                <Input \n                                    type=\"number\" \n                                    name=\"maxHeartRate\" \n                                    id=\"maxHeartRate\"\n                                    value={this.state.maxHeartRate}\n                                    onChange={this.handleMaxHeartRateChange}\n                                />\n                        </FormGroup>\n                        \n                        <FormGroup>\n                            <Label for=\"exerciseInducesAngina\">Exercise Induced Angina</Label>\n                            <Input \n                                type=\"select\" \n                                name=\"exerciseInducesAngina\" \n                                id=\"exerciseInducesAngina\"\n                                value={this.state.exerciseInducesAngina}\n                                onChange={this.handleExerciseInducesAnginaChange}\n                            >\n                                <option value=\"\" disabled hidden>Choose here</option>\n                                <option value={1}>Yes</option>\n                                <option value={0}>No</option>\n                            </Input>\n                        </FormGroup>\n                        \n                        <Row>\n                            <Col>\n                                <FormGroup>\n                                    <Label for=\"stDepression\">ST Depression</Label>\n                                        <Input \n                                            type=\"number\" \n                                            name=\"stDepression\" \n                                            id=\"stDepression\"\n                                            value={this.state.stDepression}\n                                            onChange={this.handleStDepressionChange}\n                                        />\n                                </FormGroup>\n                            </Col>\n\n                            <Col>\n                                <FormGroup>\n                                    <Label for=\"peakExerciseSt\">Peak Exercise ST</Label>\n                                    <Input\n                                        type=\"select\" \n                                        name=\"peakExerciseSt\" \n                                        id=\"peakExerciseSt\"\n                                        value={this.state.peakExerciseSt}\n                                        onChange={this.handlePeakExerciseStChange}\n                                    >\n                                        <option value=\"\" disabled hidden>Choose here</option>\n                                        <option value={1}>Upsloping</option>\n                                        <option value={2}>Flat</option>\n                                        <option value={3}>Downsloping</option>\n                                    </Input>\n                                </FormGroup>\n                            </Col>\n                        </Row>\n\n                        <FormGroup>\n                            <Label for=\"majorVesselsNum\">Number of Major Vessels</Label>\n                                <Input\n                                    type=\"select\" \n                                    name=\"majorVesselsNum\" \n                                    id=\"majorVesselsNum\"\n                                    value={this.state.majorVesselsNum}\n                                    onChange={this.handleMajorVesselsNumChange}\n                                >\n                                    <option value=\"\" disabled hidden>Choose here</option>\n                                    <option value={0}>0</option>\n                                    <option value={1}>1</option>\n                                    <option value={2}>2</option>\n                                    <option value={3}>3</option>\n                                </Input>\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label for=\"thal\">Thal</Label>\n                                <Input\n                                    type=\"select\" \n                                    name=\"thal\" \n                                    id=\"thal\" \n                                    value={this.state.thal}\n                                    onChange={this.handleThalChange}\n                                >\n                                    <option value=\"\" disabled hidden>Choose here</option>\n                                    <option value={3}>Normal</option>\n                                    <option value={6}>Fixed Defect</option>\n                                    <option value={7}>Reversable Defect</option>\n                                </Input>\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={this.onSubmit}>Submit</Button>\n                </ModalFooter>\n            </Modal>\n        );\n    }\n}\n\nexport default FormModal;\n","import React, { Component } from 'react';\nimport { Table, Button } from 'reactstrap';\nimport axios from 'axios';\nimport FormModal from '../../Components/FormModal/FormModal';\nimport \"./HistoryTable.css\";\n\nclass HistoryTable extends Component{\n    constructor() {\n        super();\n\n        this.state = {\n            isModalOpen: false,\n            data: [],\n            diagnosa: '0'\n        }\n    }\n\n    renderHead = () => {\n        return (\n            <thead>\n                <tr>\n                    <th>ID</th>\n                    <th>Age</th>\n                    <th>Sex</th>\n                    <th>Chest-Pain Type</th>\n                    <th>Resting Blood Pressure</th>\n                    <th>Serum Cholesterol</th>\n                    <th>Fasting Blood Sugar > 120 mg/dl</th>\n                    <th>Resting ECG</th>\n                    <th>Max Heart Rate Achieved</th>\n                    <th>Exercise Induced Angina</th>\n                    <th>ST Depression</th>\n                    <th>Peak Exercise ST</th>\n                    <th>Number of Major Vessels</th>\n                    <th>Thal</th>\n                    <th>Diagnosis</th>\n                </tr>\n            </thead>\n        )\n    }\n\n    handleAddNewClick = () => {\n        this.setState({ isModalOpen: true });\n    }\n\n    handleCloseModal = () => {\n        this.setState({ isModalOpen: false });\n    }\n    \n    handleSubmit = (state) => {\n        this.getDiagnosa(state);\n        this.handleCloseModal();\n    }\n\n    renderRows = () => {\n        if (this.state.data.length === 0) {\n            return (\n                <tr>\n                    <td colSpan={15} className=\"text-center\">\n                        No Data\n                    </td>\n                </tr>\n            );\n        } else {\n            const rows = [];\n            for(let i = 0; i < this.state.data.length; i++) {\n                rows.push(this.renderRow(i+1, this.state.data[i]));\n            }\n\n            return rows;\n        }\n    }\n\n    renderRow = (i, data) => {\n        return (\n            <tr key={i}>\n                <td>{i}</td>\n                <td>{data.age === \"\" ? \"Null\" : data.age}</td>\n                <td>{this.renderSex(data.sex)}</td>\n                <td>{this.renderChestPain(data.chestPain)}</td>\n                <td>{data.restingBloodPressure === \"\" ? \"Null\" : data.restingBloodPressure}</td>\n                <td>{data.serumCholesterol === \"\" ? \"Null\" : data.serumCholesterol}</td>\n                <td>{this.renderFastingBloodSugar(data.fastingBloodSugar)}</td>\n                <td>{this.renderRestingEcg(data.restingEcg)}</td>\n                <td>{data.maxHeartRate === \"\" ? \"Null\" : data.maxHeartRate}</td>\n                <td>{this.renderExercisesInducesAngina(data.exerciseInducesAngina)}</td>\n                <td>{data.stDepression === \"\" ? \"Null\" : data.stDepression}</td>\n                <td>{this.renderPeakExerciseSt(data.peakExerciseSt)}</td>\n                <td>{data.majorVesselsNum === \"\" ? \"Null\" : data.majorVesselsNum}</td>\n                <td>{this.renderThal(data.thal)}</td>\n                <td className=\"text-center\">{this.renderDiagnosa(data.diagnosis)}</td>\n            </tr>\n        )\n    }\n\n    renderSex = (code) => {\n        switch(code) {\n            case \"1\":\n                return \"Male\";\n            case \"0\":\n                return \"Female\";\n            default:\n                return \"Null\"\n        }\n    }\n\n    renderExercisesInducesAngina = (code) => {\n        switch (code) {\n            case \"1\":\n                return \"True\";\n            case \"2\":\n                return \"False\";\n            default:\n                return \"Null\";\n        }\n    }\n\n    renderFastingBloodSugar = (code) => {\n        switch (code) {\n            case \"1\":\n                return \"True\";\n            case \"2\":\n                return \"False\";\n            default:\n                return \"Null\";\n        }\n    }\n\n    renderChestPain = (code) => {\n        switch (code) {\n            case \"1\":\n                return \"Typical Angina\";\n            case \"2\":\n                return \"Atypical Angina\";\n            case \"3\":\n                return \"Non-Anginal pain\";\n            case \"4\":\n                return \"Asymptotic\"\n            default:\n                return \"Null\";\n        }\n    }\n\n    renderRestingEcg = (code) => {\n        switch (code) {\n            case \"0\":\n                return \"Normal\";\n            case \"1\":\n                return \"Having ST-T Wave Abnormality\";\n            case \"2\":\n                return \"Left Ventricular Hyperthrophy\";\n            default:\n                return \"Null\";\n        }\n    }\n\n    renderPeakExerciseSt = (code) => {\n        switch (code) {\n            case \"1\":\n                return \"Upsloping\";\n            case \"2\":\n                return \"Flat\";\n            case \"3\":\n                return \"Downsloping\";\n            default:\n                return \"Null\";\n        }\n    }\n\n    renderThal = (code) => {\n        switch (code) {\n            case \"3\":\n                return \"Normal\";\n            case \"6\":\n                return \"Fixed Defect\";\n            case \"7\":\n                return \"Reversable Defect\";\n            default:\n                return \"Null\";\n        }\n    }\n\n    getDiagnosa = (data) => {\n        const url = `http://localhost:5000/heartdisease`;\n\n        const payload = {\n            age: data.age === \"\" ? \"?\" : Number(data.age),\n            sex: data.sex === \"\" ? \"?\" : Number(data.sex),\n            chest_pain_type: data.chestPain === \"\" ? \"?\" : Number(data.chestPain),\n            rest_blood_pressure: data.restingBloodPressure === \"\" ? \"?\" : Number(data.restingBloodPressure),\n            serum_cholestrol: data.serumCholesterol === \"\" ? \"?\" : Number(data.serumCholesterol),\n            high_fasting_blood_sugar: data.fastingBloodSugar === \"\" ? \"?\" : Number(data.fastingBloodSugar),\n            resting_ecg: data.restingEcg === \"\" ? \"?\" : Number(data.restingEcg),\n            max_heart_rate: data.maxHeartRate === \"\" ? \"?\" : Number(data.maxHeartRate),\n            exercise_induced_angina: data.exerciseInducesAngina === \"\" ? \"?\" : Number(data.exerciseInducesAngina),\n            st_depression: data.stDepression === \"\" ? \"?\" : Number(data.stDepression),\n            peak_exercise_st: data.peakExerciseSt === \"\" ? \"?\" : Number(data.peakExerciseSt),\n            major_vessels_num: data.majorVesselsNum === \"\" ? \"?\" : Number(data.majorVesselsNum),\n            thal: data.thal === \"\" ? \"?\" : Number(data.thal),\n        }\n\n        const options = {\n            method: 'POST',\n            data: payload,\n            url,\n        };\n\n        let thiz = this;\n        axios(options)\n        .then((response) => {\n            console.log(response, 'response');\n            console.log(response.data.heart_disease_type, 'type');\n\n            console.log(\"testing\", data)\n\n            const newData = {\n                ...data,\n                diagnosis: response.data.heart_disease_type,\n            }\n    \n            thiz.setState({\n                data: [\n                    ...thiz.state.data,\n                    newData,\n                ]\n            });\n        });\n        return;\n    }\n\n    renderDiagnosa = (code) => {\n        console.log(code, 'diagnosis');\n        switch(code) {\n            case 0 :\n                return \"No\";\n            case 1 :\n                return \"Stadium 1\";\n            case 2 :\n                return \"Stadium 2\";\n            case 3 :\n                return \"Stadium 3\";\n            case 4 :\n                return \"Stadium 4\";\n            default:\n                return \"Err\";\n        }\n    }\n\n    render() {\n        console.log(this.state)\n        return (\n            <div>\n                <div className=\"table-wrapper\">\n                    <h1 className=\"text-center\">Heart Disease</h1>\n                    <div>\n                        <div className=\"add-button\">\n                            <Button color=\"success\" onClick={ this.handleAddNewClick }>\n                                + Add New\n                            </Button>\n                        </div>\n                        <Table hover>\n                        {this.renderHead()}\n                            <tbody>\n                                {this.renderRows()}\n                            </tbody>\n                        </Table>\n                        <FormModal\n                            isOpen={this.state.isModalOpen}\n                            toggle={this.handleCloseModal}\n                            handleSubmit={this.handleSubmit}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default HistoryTable;","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport HistoryTable from '../HistoryTable/HistoryTable';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route path = '/' component={HistoryTable} />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './Containers/App/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n, document.getElementById('root'));\n"],"sourceRoot":""}